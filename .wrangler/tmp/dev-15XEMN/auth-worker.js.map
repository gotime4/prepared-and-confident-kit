{
  "version": 3,
  "sources": ["../bundle-VG4ZH4/checked-fetch.js", "../../../src/auth-worker.js", "../../../../../.nvm/versions/node/v20.17.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../.nvm/versions/node/v20.17.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-VG4ZH4/middleware-insertion-facade.js", "../../../../../.nvm/versions/node/v20.17.0/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-VG4ZH4/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/ryan/dev/prepared-and-confident-kit-main/.wrangler/tmp/dev-15XEMN",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "/**\n * Authentication and Data API Cloudflare Worker\n * \n * Implements:\n * - POST /api/signup: Create new user account\n * - POST /api/login: Authenticate and get session token\n * - GET /api/data: Retrieve authenticated user data\n * - POST /api/data: Update authenticated user data\n * - POST /api/logout: Logout and invalidate session token\n */\n\n// Utility for crypto operations\nconst generateSHA256 = async (message) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(message);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n};\n\n// Generate a random session token\nconst generateToken = () => {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let token = '';\n  for (let i = 0; i < 32; i++) {\n    token += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return token;\n};\n\n// Validate session token\nconst validateSession = async (env, token) => {\n  if (!token) return null;\n  \n  const sessionQuery = env.DB.prepare(\n    'SELECT user_id, expiration FROM sessions WHERE token = ? AND expiration > ?'\n  ).bind(token, new Date().toISOString());\n  \n  const session = await sessionQuery.first();\n  if (!session) return null;\n  \n  const userQuery = env.DB.prepare(\n    'SELECT id, email, name FROM users WHERE id = ?'\n  ).bind(session.user_id);\n  \n  return userQuery.first();\n};\n\n// Handle signup request\nasync function handleSignup(request, env) {\n  const { email, password, name } = await request.json();\n  \n  // Validation\n  if (!email || !password || !name) {\n    return new Response(JSON.stringify({ \n      error: 'Email, password, and name are required' \n    }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  // Check if user already exists\n  const existingUser = await env.DB.prepare(\n    'SELECT id FROM users WHERE email = ?'\n  ).bind(email).first();\n  \n  if (existingUser) {\n    return new Response(JSON.stringify({ \n      error: 'User with this email already exists' \n    }), {\n      status: 409,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  // Hash password and create user\n  const hashedPassword = await generateSHA256(password);\n  \n  try {\n    await env.DB.prepare(\n      'INSERT INTO users (email, password, name) VALUES (?, ?, ?)'\n    ).bind(email, hashedPassword, name).run();\n    \n    return new Response(JSON.stringify({ \n      success: true,\n      message: 'User created successfully' \n    }), {\n      status: 201,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    return new Response(JSON.stringify({ \n      error: 'Failed to create user' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Handle login request\nasync function handleLogin(request, env) {\n  const { email, password } = await request.json();\n  \n  // Validation\n  if (!email || !password) {\n    return new Response(JSON.stringify({ \n      error: 'Email and password are required' \n    }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  // Hash the provided password for comparison\n  const hashedPassword = await generateSHA256(password);\n  \n  // Query for user\n  const user = await env.DB.prepare(\n    'SELECT id, email, name FROM users WHERE email = ? AND password = ?'\n  ).bind(email, hashedPassword).first();\n  \n  if (!user) {\n    return new Response(JSON.stringify({ \n      error: 'Invalid credentials' \n    }), {\n      status: 401,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  // Generate session token\n  const token = generateToken();\n  const expirationDate = new Date();\n  expirationDate.setDate(expirationDate.getDate() + 7); // Token valid for 7 days\n  \n  // Store session\n  await env.DB.prepare(\n    'INSERT INTO sessions (token, user_id, expiration) VALUES (?, ?, ?)'\n  ).bind(token, user.id, expirationDate.toISOString()).run();\n  \n  return new Response(JSON.stringify({ \n    success: true,\n    token,\n    user: {\n      id: user.id,\n      email: user.email,\n      name: user.name\n    }\n  }), {\n    status: 200,\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n// Handle GET data request\nasync function handleGetData(request, env) {\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader && authHeader.startsWith('Bearer ') \n    ? authHeader.substring(7) \n    : null;\n  \n  const user = await validateSession(env, token);\n  \n  if (!user) {\n    return new Response(JSON.stringify({ \n      error: 'Unauthorized' \n    }), {\n      status: 401,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  // Get user data\n  const userData = await env.DB.prepare(\n    'SELECT * FROM user_data WHERE user_id = ?'\n  ).bind(user.id).first();\n  \n  return new Response(JSON.stringify({ \n    success: true,\n    user,\n    data: userData || {}\n  }), {\n    status: 200,\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n// Handle POST data request\nasync function handlePostData(request, env) {\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader && authHeader.startsWith('Bearer ') \n    ? authHeader.substring(7) \n    : null;\n  \n  const user = await validateSession(env, token);\n  \n  if (!user) {\n    return new Response(JSON.stringify({ \n      error: 'Unauthorized' \n    }), {\n      status: 401,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  const data = await request.json();\n  \n  // Check if user already has data entry\n  const existingData = await env.DB.prepare(\n    'SELECT id FROM user_data WHERE user_id = ?'\n  ).bind(user.id).first();\n  \n  try {\n    if (existingData) {\n      // Update existing data\n      await env.DB.prepare(\n        'UPDATE user_data SET data = ? WHERE user_id = ?'\n      ).bind(JSON.stringify(data), user.id).run();\n    } else {\n      // Create new data entry\n      await env.DB.prepare(\n        'INSERT INTO user_data (user_id, data) VALUES (?, ?)'\n      ).bind(user.id, JSON.stringify(data)).run();\n    }\n    \n    return new Response(JSON.stringify({ \n      success: true,\n      message: 'Data saved successfully' \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    return new Response(JSON.stringify({ \n      error: 'Failed to save data' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Handle logout request\nasync function handleLogout(request, env) {\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader && authHeader.startsWith('Bearer ') \n    ? authHeader.substring(7) \n    : null;\n  \n  if (!token) {\n    return new Response(JSON.stringify({ \n      error: 'No token provided' \n    }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n  \n  try {\n    // Delete the session from the database\n    await env.DB.prepare(\n      'DELETE FROM sessions WHERE token = ?'\n    ).bind(token).run();\n    \n    return new Response(JSON.stringify({ \n      success: true,\n      message: 'Logged out successfully' \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    return new Response(JSON.stringify({ \n      error: 'Failed to logout' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Main request handler\nexport default {\n  async fetch(request, env) {\n    const url = new URL(request.url);\n    const path = url.pathname;\n    \n    // Get the request origin \n    const origin = request.headers.get('Origin') || 'http://localhost:8080';\n    \n    // Enhanced CORS headers with proper CSP\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': origin,  // Use the request's origin instead of wildcard\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      'Access-Control-Allow-Credentials': 'true',  // Important for requests with credentials\n      // Add Content-Security-Policy header to allow necessary connections\n      'Content-Security-Policy': \"default-src 'self'; connect-src 'self' http://localhost:8787 http://localhost:8080 *.workers.dev *.cloudflareaccess.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; worker-src 'self' *.workers.dev blob:;\"\n    };\n    \n    // Handle preflight requests\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        status: 204,\n        headers: corsHeaders\n      });\n    }\n    \n    try {\n      // Route handling\n      if (path === '/api/signup' && request.method === 'POST') {\n        const response = await handleSignup(request, env);\n        return new Response(response.body, {\n          status: response.status,\n          headers: { ...response.headers, ...corsHeaders }\n        });\n      }\n      \n      if (path === '/api/login' && request.method === 'POST') {\n        const response = await handleLogin(request, env);\n        return new Response(response.body, {\n          status: response.status,\n          headers: { ...response.headers, ...corsHeaders }\n        });\n      }\n      \n      if (path === '/api/data' && request.method === 'GET') {\n        const response = await handleGetData(request, env);\n        return new Response(response.body, {\n          status: response.status,\n          headers: { ...response.headers, ...corsHeaders }\n        });\n      }\n      \n      if (path === '/api/data' && request.method === 'POST') {\n        const response = await handlePostData(request, env);\n        return new Response(response.body, {\n          status: response.status,\n          headers: { ...response.headers, ...corsHeaders }\n        });\n      }\n      \n      if (path === '/api/logout' && request.method === 'POST') {\n        const response = await handleLogout(request, env);\n        return new Response(response.body, {\n          status: response.status,\n          headers: { ...response.headers, ...corsHeaders }\n        });\n      }\n      \n      // Route not found\n      return new Response(JSON.stringify({ error: 'Not found' }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    } catch (error) {\n      return new Response(JSON.stringify({ error: 'Internal server error' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/ryan/dev/prepared-and-confident-kit-main/src/auth-worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/ryan/.nvm/versions/node/v20.17.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/ryan/.nvm/versions/node/v20.17.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/ryan/dev/prepared-and-confident-kit-main/src/auth-worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/ryan/dev/prepared-and-confident-kit-main/.wrangler/tmp/bundle-VG4ZH4/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/ryan/.nvm/versions/node/v20.17.0/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/ryan/dev/prepared-and-confident-kit-main/.wrangler/tmp/bundle-VG4ZH4/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/ryan/dev/prepared-and-confident-kit-main/.wrangler/tmp/bundle-VG4ZH4/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AAAA,IAAM,OAAO,oBAAI,IAAI;AAErB,SAAS,SAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;AAAA,KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;AAAA,EACH;AACH,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,WAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;AAAA,QACP;AAAA,KACO,IAAI,SAAS,CAAC;AAAA;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAnBS;AAqBT,WAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;AAAA,EAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,UAAM,CAAC,SAAS,IAAI,IAAI;AACxB,aAAS,SAAS,IAAI;AACtB,WAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC/C;AACD,CAAC;;;ACjBD,IAAM,iBAAiB,8BAAO,YAAY;AACxC,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,OAAO,QAAQ,OAAO,OAAO;AACnC,QAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAC7D,QAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AACvD,SAAO,UAAU,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AACpE,GANuB;AASvB,IAAM,gBAAgB,6BAAM;AAC1B,QAAM,QAAQ;AACd,MAAI,QAAQ;AACZ,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,aAAS,MAAM,OAAO,KAAK,MAAM,KAAK,OAAO,IAAI,MAAM,MAAM,CAAC;AAAA,EAChE;AACA,SAAO;AACT,GAPsB;AAUtB,IAAM,kBAAkB,8BAAO,KAAK,UAAU;AAC5C,MAAI,CAAC,MAAO,QAAO;AAEnB,QAAM,eAAe,IAAI,GAAG;AAAA,IAC1B;AAAA,EACF,EAAE,KAAK,QAAO,oBAAI,KAAK,GAAE,YAAY,CAAC;AAEtC,QAAM,UAAU,MAAM,aAAa,MAAM;AACzC,MAAI,CAAC,QAAS,QAAO;AAErB,QAAM,YAAY,IAAI,GAAG;AAAA,IACvB;AAAA,EACF,EAAE,KAAK,QAAQ,OAAO;AAEtB,SAAO,UAAU,MAAM;AACzB,GAfwB;AAkBxB,eAAe,aAAa,SAAS,KAAK;AACxC,QAAM,EAAE,OAAO,UAAU,KAAK,IAAI,MAAM,QAAQ,KAAK;AAGrD,MAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM;AAChC,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,QAAM,eAAe,MAAM,IAAI,GAAG;AAAA,IAChC;AAAA,EACF,EAAE,KAAK,KAAK,EAAE,MAAM;AAEpB,MAAI,cAAc;AAChB,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,QAAM,iBAAiB,MAAM,eAAe,QAAQ;AAEpD,MAAI;AACF,UAAM,IAAI,GAAG;AAAA,MACX;AAAA,IACF,EAAE,KAAK,OAAO,gBAAgB,IAAI,EAAE,IAAI;AAExC,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AAlDe;AAqDf,eAAe,YAAY,SAAS,KAAK;AACvC,QAAM,EAAE,OAAO,SAAS,IAAI,MAAM,QAAQ,KAAK;AAG/C,MAAI,CAAC,SAAS,CAAC,UAAU;AACvB,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,QAAM,iBAAiB,MAAM,eAAe,QAAQ;AAGpD,QAAM,OAAO,MAAM,IAAI,GAAG;AAAA,IACxB;AAAA,EACF,EAAE,KAAK,OAAO,cAAc,EAAE,MAAM;AAEpC,MAAI,CAAC,MAAM;AACT,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,QAAM,QAAQ,cAAc;AAC5B,QAAM,iBAAiB,oBAAI,KAAK;AAChC,iBAAe,QAAQ,eAAe,QAAQ,IAAI,CAAC;AAGnD,QAAM,IAAI,GAAG;AAAA,IACX;AAAA,EACF,EAAE,KAAK,OAAO,KAAK,IAAI,eAAe,YAAY,CAAC,EAAE,IAAI;AAEzD,SAAO,IAAI,SAAS,KAAK,UAAU;AAAA,IACjC,SAAS;AAAA,IACT;AAAA,IACA,MAAM;AAAA,MACJ,IAAI,KAAK;AAAA,MACT,OAAO,KAAK;AAAA,MACZ,MAAM,KAAK;AAAA,IACb;AAAA,EACF,CAAC,GAAG;AAAA,IACF,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACH;AApDe;AAuDf,eAAe,cAAc,SAAS,KAAK;AACzC,QAAM,aAAa,QAAQ,QAAQ,IAAI,eAAe;AACtD,QAAM,QAAQ,cAAc,WAAW,WAAW,SAAS,IACvD,WAAW,UAAU,CAAC,IACtB;AAEJ,QAAM,OAAO,MAAM,gBAAgB,KAAK,KAAK;AAE7C,MAAI,CAAC,MAAM;AACT,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAGA,QAAM,WAAW,MAAM,IAAI,GAAG;AAAA,IAC5B;AAAA,EACF,EAAE,KAAK,KAAK,EAAE,EAAE,MAAM;AAEtB,SAAO,IAAI,SAAS,KAAK,UAAU;AAAA,IACjC,SAAS;AAAA,IACT;AAAA,IACA,MAAM,YAAY,CAAC;AAAA,EACrB,CAAC,GAAG;AAAA,IACF,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,EAChD,CAAC;AACH;AA9Be;AAiCf,eAAe,eAAe,SAAS,KAAK;AAC1C,QAAM,aAAa,QAAQ,QAAQ,IAAI,eAAe;AACtD,QAAM,QAAQ,cAAc,WAAW,WAAW,SAAS,IACvD,WAAW,UAAU,CAAC,IACtB;AAEJ,QAAM,OAAO,MAAM,gBAAgB,KAAK,KAAK;AAE7C,MAAI,CAAC,MAAM;AACT,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAEA,QAAM,OAAO,MAAM,QAAQ,KAAK;AAGhC,QAAM,eAAe,MAAM,IAAI,GAAG;AAAA,IAChC;AAAA,EACF,EAAE,KAAK,KAAK,EAAE,EAAE,MAAM;AAEtB,MAAI;AACF,QAAI,cAAc;AAEhB,YAAM,IAAI,GAAG;AAAA,QACX;AAAA,MACF,EAAE,KAAK,KAAK,UAAU,IAAI,GAAG,KAAK,EAAE,EAAE,IAAI;AAAA,IAC5C,OAAO;AAEL,YAAM,IAAI,GAAG;AAAA,QACX;AAAA,MACF,EAAE,KAAK,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,EAAE,IAAI;AAAA,IAC5C;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AApDe;AAuDf,eAAe,aAAa,SAAS,KAAK;AACxC,QAAM,aAAa,QAAQ,QAAQ,IAAI,eAAe;AACtD,QAAM,QAAQ,cAAc,WAAW,WAAW,SAAS,IACvD,WAAW,UAAU,CAAC,IACtB;AAEJ,MAAI,CAAC,OAAO;AACV,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AAEA,MAAI;AAEF,UAAM,IAAI,GAAG;AAAA,MACX;AAAA,IACF,EAAE,KAAK,KAAK,EAAE,IAAI;AAElB,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH,SAAS,OAAO;AACd,WAAO,IAAI,SAAS,KAAK,UAAU;AAAA,MACjC,OAAO;AAAA,IACT,CAAC,GAAG;AAAA,MACF,QAAQ;AAAA,MACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AApCe;AAuCf,IAAO,sBAAQ;AAAA,EACb,MAAM,MAAM,SAAS,KAAK;AACxB,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,OAAO,IAAI;AAGjB,UAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ,KAAK;AAGhD,UAAM,cAAc;AAAA,MAClB,+BAA+B;AAAA;AAAA,MAC/B,gCAAgC;AAAA,MAChC,gCAAgC;AAAA,MAChC,oCAAoC;AAAA;AAAA;AAAA,MAEpC,2BAA2B;AAAA,IAC7B;AAGA,QAAI,QAAQ,WAAW,WAAW;AAChC,aAAO,IAAI,SAAS,MAAM;AAAA,QACxB,QAAQ;AAAA,QACR,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AAEA,QAAI;AAEF,UAAI,SAAS,iBAAiB,QAAQ,WAAW,QAAQ;AACvD,cAAM,WAAW,MAAM,aAAa,SAAS,GAAG;AAChD,eAAO,IAAI,SAAS,SAAS,MAAM;AAAA,UACjC,QAAQ,SAAS;AAAA,UACjB,SAAS,EAAE,GAAG,SAAS,SAAS,GAAG,YAAY;AAAA,QACjD,CAAC;AAAA,MACH;AAEA,UAAI,SAAS,gBAAgB,QAAQ,WAAW,QAAQ;AACtD,cAAM,WAAW,MAAM,YAAY,SAAS,GAAG;AAC/C,eAAO,IAAI,SAAS,SAAS,MAAM;AAAA,UACjC,QAAQ,SAAS;AAAA,UACjB,SAAS,EAAE,GAAG,SAAS,SAAS,GAAG,YAAY;AAAA,QACjD,CAAC;AAAA,MACH;AAEA,UAAI,SAAS,eAAe,QAAQ,WAAW,OAAO;AACpD,cAAM,WAAW,MAAM,cAAc,SAAS,GAAG;AACjD,eAAO,IAAI,SAAS,SAAS,MAAM;AAAA,UACjC,QAAQ,SAAS;AAAA,UACjB,SAAS,EAAE,GAAG,SAAS,SAAS,GAAG,YAAY;AAAA,QACjD,CAAC;AAAA,MACH;AAEA,UAAI,SAAS,eAAe,QAAQ,WAAW,QAAQ;AACrD,cAAM,WAAW,MAAM,eAAe,SAAS,GAAG;AAClD,eAAO,IAAI,SAAS,SAAS,MAAM;AAAA,UACjC,QAAQ,SAAS;AAAA,UACjB,SAAS,EAAE,GAAG,SAAS,SAAS,GAAG,YAAY;AAAA,QACjD,CAAC;AAAA,MACH;AAEA,UAAI,SAAS,iBAAiB,QAAQ,WAAW,QAAQ;AACvD,cAAM,WAAW,MAAM,aAAa,SAAS,GAAG;AAChD,eAAO,IAAI,SAAS,SAAS,MAAM;AAAA,UACjC,QAAQ,SAAS;AAAA,UACjB,SAAS,EAAE,GAAG,SAAS,SAAS,GAAG,YAAY;AAAA,QACjD,CAAC;AAAA,MACH;AAGA,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,YAAY,CAAC,GAAG;AAAA,QAC1D,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,GAAG,YAAY;AAAA,MAChE,CAAC;AAAA,IACH,SAAS,OAAO;AACd,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,wBAAwB,CAAC,GAAG;AAAA,QACtE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,oBAAoB,GAAG,YAAY;AAAA,MAChE,CAAC;AAAA,IACH;AAAA,EACF;AACF;;;AC1WA,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": []
}
